{"version":3,"sources":["Components/Free/Free.js","Components/Paid/Paid.js","Components/Convert/Convert.js","App.js","reportWebVitals.js","index.js"],"names":["Free","className","type","Paid","history","useHistory","onClick","push","Convert","onInputChange","onButtonSubmit","OutputChange","id","placeholder","onChange","App","event","setState","input","target","value","console","log","state","output","path","exact","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RAWeA,EARF,WACP,OACE,sBAAKC,UAAY,OAAjB,UACI,uBAAOA,UAAU,OAAOC,KAAK,UADjC,Y,OCaOC,EAdF,WACX,IAAIC,EAAQC,cACR,OACE,sBAAKJ,UAAY,OAAjB,UACI,uBACIK,QAAS,WAAKF,EAAQG,KAAK,YAC3BN,UAAU,OACVC,KAAK,UAJb,WC6BOM,G,MAhCC,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,cAAeC,EAAiC,EAAjCA,eAAeC,EAAkB,EAAlBA,aAC3C,OACE,qBAAKV,UAAU,2EAAf,SACA,gCACI,oBAAIA,UAAU,OAAd,+BACA,sBAAKA,UAAU,QAAf,UACI,uBACIA,UAAU,gCACVW,GAAG,WACHV,KAAK,SACLW,YAAY,kBACZC,SAAUL,IAEd,8BACI,wBAAQR,UAAU,MAClBK,QAASI,EADT,2BAIR,uBACA,qBAAIT,UAAU,OAAd,2CAA+CU,KAC/C,qBAAKV,UAAU,iB,sBCsCZc,E,kDArDb,aAAc,IAAD,8BACX,gBAOFN,cAAgB,SAACO,GACf,EAAKC,SAAS,CAACC,MAAOF,EAAMG,OAAOC,QACnCC,QAAQC,IAAI,EAAKC,MAAML,QAVZ,EAcbR,eAAe,SAACc,GACd,EAAKP,SAAS,CAACO,OAAQ,EAAKD,MAAML,MAAM,KACxCG,QAAQC,IAAI,EAAKC,MAAMC,SAdvB,EAAKD,MAAM,CACTL,MAAO,GACPM,OAAQ,IAJC,E,0CAmBb,WACE,OACI,8BACE,eAAC,IAAD,WACA,eAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAArB,UACE,oBAAIzB,UAAU,MAAd,wBACA,sBAAKA,UAAU,SAAf,UACE,wBAAQA,UAAU,cAAlB,kBACA,wBAAQA,UAAU,cAAlB,wBAEF,sBAAKA,UAAU,QAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,UAGA,cAAC,IAAD,CAAOwB,KAAK,WAAZ,SACE,cAAC,EAAD,CACEhB,cAAekB,KAAKlB,cACpBC,eAAgBiB,KAAKjB,eACrBC,aAAcgB,KAAKJ,MAAMC,WAG7B,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAArB,SACE,sBAAKzB,UAAU,SAAf,UACE,wBAAQA,UAAU,cAAlB,sBACA,wBAAQA,UAAU,cAAlB,gC,GA7CA2B,aCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f7cb3a79.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Free.css';\r\n\r\nconst Free = () => {\r\n      return (\r\n        <div className = \"Free\">\r\n            <input className='free' type=\"radio\"/> Free \r\n        </div>\r\n      );\r\n}\r\n\r\nexport default Free;","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n// import './Paid.css';\r\n\r\nconst Paid = () => {\r\n  let history=useHistory();\r\n      return (\r\n        <div className = \"Free\">\r\n            <input\r\n                onClick={()=>{history.push('Convert');}}\r\n                className='free'\r\n                type=\"radio\"\r\n            />\r\n            Paid\r\n        </div>\r\n      );\r\n}\r\n\r\nexport default Paid;","import React from 'react';\r\nimport './Convert.css'\r\n\r\n\r\nconst Convert = ({ onInputChange, onButtonSubmit,OutputChange}) => {\r\n      return (\r\n        <div className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n        <div >\r\n            <h3 className='main'>Enter Entry in cc</h3>\r\n            <div className='space'>           \r\n                <input \r\n                    className=\"mt3 mb3 pa2 input-reset w-100\" \r\n                    id='getinput'\r\n                    type=\"number\" \r\n                    placeholder='Enter the value'\r\n                    onChange={onInputChange} \r\n                />\r\n                <div>\r\n                    <button className='gap'\r\n                    onClick={onButtonSubmit}>Convert </button>\r\n                </div>\r\n            </div> \r\n            <br></br>\r\n            <h3 className='main'>The INR you have pay is â‚¹{OutputChange}</h3> \r\n            <div className='space'>           \r\n               {/* <input \r\n                    className=\"mt3 pa2 input-reset w-100\" \r\n                    type=\"text\" \r\n                    placeholder='INR is' \r\n                />*/}\r\n            </div>     \r\n        </div>    \r\n        </div>  \r\n      );\r\n}\r\n\r\nexport default Convert;","import React, { Component } from 'react';\nimport Free from './Components/Free/Free';\nimport Paid from './Components/Paid/Paid';\nimport Convert from './Components/Convert/Convert';\nimport './App.css';\nimport 'tachyons';\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state={\n      input: '',\n      output: ''\n    }\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value})\n    console.log(this.state.input)\n    \n  }\n\n  onButtonSubmit=(output)=>{\n    this.setState({output: this.state.input/10});\n    console.log(this.state.output)\n  }\n\n  render() {\n    return (\n        <div>\n          <BrowserRouter>\n          <Route path=\"/\" exact>\n            <h1 className='App'>Entry fees</h1>\n            <div className='button'>\n              <button className='button1 ma3'>Save</button>\n              <button className='button2 ma3'>Preview</button>\n            </div>\n            <div className='align'>\n              <Free />\n              <Paid /> \n            </div>\n            </Route>\n              <Route path=\"/Convert\">\n                <Convert \n                  onInputChange={this.onInputChange} \n                  onButtonSubmit={this.onButtonSubmit} \n                  OutputChange={this.state.output} \n                />\n              </Route>\n              <Route path=\"/\" exact>\n                <div className='button'>\n                  <button className='button1 ma3'>Previous</button>\n                  <button className='button2 ma3'>Next</button>\n                </div>\n              </Route>\n          </BrowserRouter>\n        </div>\n    );\n  }\n}\n\nexport default App;\n\n\n//Buttons\n//free component\n//paid component","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}